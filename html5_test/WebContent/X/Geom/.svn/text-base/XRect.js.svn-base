//==========================================================================================
(function() { var c$ = {__initializing__: false};
//==========================================================================================
var n$ = g$.namespace ("X.Geom");
	
//==========================================================================================
	g$.class (c$, n$, {

//==========================================================================================
	name: "XRect", extend: Object, borrows: [],
//==========================================================================================
		
//==========================================================================================
	properties: {
//==========================================================================================
		m_x: 0,				// Number;
		m_y: 0,				// Number;
		m_width: 0,			// Number;
		m_height: 0,		// Number;
		
//==========================================================================================
$: function () {} }, // end properties

//==========================================================================================
	construct:
//==========================================================================================
		function (__x, __y, __width, __height) {
			if (c$.__initializing__) return;
			
//			Object.call (this);
		
			this.m_x = __x;
			this.m_y = __y;
			
			this.m_width = __width;
			this.m_height = __height;
		},

//==========================================================================================
	methods: {
//==========================================================================================

//------------------------------------------------------------------------------------------
		setup: function () { // void
		},
		
//------------------------------------------------------------------------------------------
		cleanup: function () { // void
		},
	
//------------------------------------------------------------------------------------------
		cloneX: function  () { // XRect 
			var __rect = new c$.XRect (this.x, this.y, this.width, this.height);
			
			return __rect;
		},

//------------------------------------------------------------------------------------------
		inflate: function (__dx, __dy) { // void
			this.m_x -= __dx;
			this.m_y -= __dy;
			this.m_width += __dx;
			this.m_height += __dy;
		},

//------------------------------------------------------------------------------------------
		intersects: function (__rect) { // Boolean
			if (__rect.right < this.x) return false;
			if (__rect.x > this.right) return false;
			if (__rect.bottom < this.y) return false;
			if (__rect.y > this.bottom) return false;
			
			return true;
		},

//------------------------------------------------------------------------------------------
		containsPoint: function (__point) { // Boolean
			if (__point.x < this.x) return false;
			if (__point.x > this.right) return false;
			if (__point.y < this.y) return false;
			if (__point.y > this.bottom) return false;
		},
		
//------------------------------------------------------------------------------------------
		offset: function (__dx, __dy) { // void
			this.x += __dx;
			this.y += __dy;
		},
		
//------------------------------------------------------------------------------------------
		offsetPoint: function (__point) { // void
			this.x += __point.x;
			this.y += __point.y;
		},
		
//==========================================================================================
$: function () {} }, // end methods

//==========================================================================================
accessors: {
//==========================================================================================

//------------------------------------------------------------------------------------------
	x: {
		get: function () {
			return this.m_x;
		},
		
		set: function (__value) {
			this.m_x = __value;
		}
	},
	
//------------------------------------------------------------------------------------------
	y: {
		get: function () {
			return this.m_y;
		},
		
		set: function (__value) {
			this.m_y = __value;
		}
	},

//------------------------------------------------------------------------------------------
	width: {
		get: function () {
			return this.m_width;
		},
		
		set: function (__value) {
			this.m_width = __value;
		}
	},

//------------------------------------------------------------------------------------------
	height: {
		get: function () {
			return this.m_height;
		},
		
		set: function (__value) {
			this.m_height = __value;
		}
	},
	
//------------------------------------------------------------------------------------------
	left: {
		get: function () {
			return this.m_x;
		},
		
		set: function (__value) {
			this.m_x = __value;
		}
	},

//------------------------------------------------------------------------------------------
	right: {
		get: function () {
			return this.m_x + this.m_width - 1;
		},
		
		set: function (__value) {
			this.m_width = __value - this.m_x + 1;
		}
	},
	
//------------------------------------------------------------------------------------------
	top: {
		get: function () {
			return this.m_y;
		},
		
		set: function (__value) {
			this.m_y = __value;
		}
	},
	
//------------------------------------------------------------------------------------------
	bottom: {
		get: function () {
			return this.m_y + this.m_height - 1;
		},
		
		set: function (__value) {
			this.m_height = __value - this.m_x + 1;
		}
	},
	
//==========================================================================================
$: {} }, // end accessors

//==========================================================================================
end: []
//==========================================================================================
	});
			
//==========================================================================================
}());