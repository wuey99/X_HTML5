//==========================================================================================
(function() { var c$ = {__initializing__: false};
//==========================================================================================
var n$ = g$.namespace ("X.Resource.Types");
	
g$.import (
		function () {
			g$.import (c$, "X.Resource.*");
			g$.import (c$, "X.Resource.Types.*");
		}
	);

//==========================================================================================
	g$.class (c$, n$, {

//==========================================================================================
	name: "XSWFResource", extend: Object, borrows: [],
//==========================================================================================

//==========================================================================================
	properties: {
//==========================================================================================
		m_loader: null,							// Object; (Class collection)
		m_loadComplete: null,					// Boolean;
		m_resourceManager: null,				// XSubResourceManager;
	
//==========================================================================================
$: function () {} }, // end properties

//==========================================================================================
	construct:
//==========================================================================================
		function () {
			if (c$.__initializing__) return;
			
			this.m_loader = null;
		},

//==========================================================================================
	methods: {
//==========================================================================================

//------------------------------------------------------------------------------------------
		setup: function () { // void
		},
		
//------------------------------------------------------------------------------------------
		cleanup: function () { // void
		},
	
//------------------------------------------------------------------------------------------	
		resourceManager: function () { // XSubResourceManager
			return this.m_resourceManager;
		},
		
//------------------------------------------------------------------------------------------
		kill: function () { // void
			this.m_loadComplete = false;
		},

//------------------------------------------------------------------------------------------
		// __fullName:String
		getClassByName: function (__fullName /* String */) { // Class {
			if (this.m_loader == null) {
				this.loadResource ();
			}
				
			if (!this.m_loadComplete) {	
				return null;
			}
			
			var r /* XResourceName */ = new c$.XResourceName (__fullName);
			
			var __resourceName /* String */ = r.resourceName;
			var __className /* String */ = r.className;
			var c = this.m_loader[__className];
			
			if (c == undefined) {
				throw (Error ("unable to resolve: " + __className + " in " + __resourceName));
			}

			return c;
		},
		
//==========================================================================================
$: function () {} }, // end methods

//==========================================================================================
accessors: {
//==========================================================================================
	
//==========================================================================================
$: {} }, // end accessors

//==========================================================================================
statics: {
//==========================================================================================

//==========================================================================================
$: function () {} }, // end statics

//==========================================================================================
end: []
//==========================================================================================
	});
			
//==========================================================================================
}());