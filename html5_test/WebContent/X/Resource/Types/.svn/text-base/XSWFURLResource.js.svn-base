//==========================================================================================
(function() { var c$ = {__initializing__: false};
//==========================================================================================
var n$ = g$.namespace ("X.Resource.Types");

g$.import (
		function () {
			g$.import (c$, "X.Resource.*");
			g$.import (c$, "X.Resource.Types.*");
		}
	);

//==========================================================================================
	g$.class (c$, n$, {

//==========================================================================================
	name: "XSWFURLResource", extend: c$.XSWFResource, borrows: [],
//==========================================================================================

//==========================================================================================
	properties: {
//==========================================================================================
		
//==========================================================================================
$: function () {} }, // end properties

//==========================================================================================
	construct:
//==========================================================================================
		function () {
			if (c$.__initializing__) return;
		},

//==========================================================================================
	methods: {
//==========================================================================================

//------------------------------------------------------------------------------------------
		// __resourcePath:String, __resourceXML:XML,
		// __parent:Sprite,
		// __resourceManager:XSubResourceManager
		
		setup: function (
			__resourcePath, /* String */ __resourceXML, /* XML */
			__parent, /* Sprite */
			__resourceManager /* XSubResourceManager */
			) { // void {
				
			this.m_resourcePath = __resourcePath;
			this.m_resourceXML = __resourceXML;
			this.m_parent = __parent;
			this.m_loader = null;
			this.m_loadComplete = false;
			this.m_resourceManager = __resourceManager;
		},
		
//------------------------------------------------------------------------------------------
		cleanup: function () { // void
		},
	
//------------------------------------------------------------------------------------------
		loadResource: function () { // void {
			var __httpRequest = new g$.httpRequest ();
			
			__httpRequest.connect (
				"GET", this.m_resourcePath, "",
				
				function (__request) {		
					this.m_loader = eval (__request.responseText);
					
					this.m_loadComplete = true;
				}.bind (this)
			);
		},
		
//==========================================================================================
$: function () {} }, // end methods

//==========================================================================================
accessors: {
//==========================================================================================
	
//==========================================================================================
$: {} }, // end accessors

//==========================================================================================
statics: {
//==========================================================================================

//==========================================================================================
$: function () {} }, // end statics

//==========================================================================================
end: []
//==========================================================================================
	});
			
//==========================================================================================
}());