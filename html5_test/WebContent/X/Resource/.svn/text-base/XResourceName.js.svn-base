//==========================================================================================
(function() { var c$ = {__initializing__: false};
//==========================================================================================
var n$ = g$.namespace ("X.Resource");
	
//==========================================================================================
	g$.class (c$, n$, {

//==========================================================================================
	name: "XResourceName", extend: Object, borrows: [],
//==========================================================================================

//==========================================================================================
	properties: {
//==========================================================================================
		m_className: "",					// String;
		m_resourceName: "",					// String;
		m_manifestName: "",					// String
	
//==========================================================================================
$: function () {} }, // end properties

//==========================================================================================
	construct:
//==========================================================================================
		
//------------------------------------------------------------------------------------------
// fullName examples:
//
// XLogicObject:XLogicObject  -  Resource Name, Class Name
// :XLogicObject:XLogicObject  -  Resource Name, Class Name
// Project:XLogicObject:XLogicObject  -   Manifest Name, Resource Name, Class Name
//------------------------------------------------------------------------------------------
		//__fullName:String
		
		function (__fullName) {
			if (c$.__initializing__) return;
		
//			Object.call (this);
			
			var s = __fullName.split (":");
			
			if (s.length != 2 && s.length != 3) {
				throw (Error ("className not valid: " + __fullName));
			}
			
			if (s.length == 2) {
				this.m_manifestName = "";
				this.m_resourceName = s[0];
				this.m_className = s[1];
			}
			else
			{
				this.m_manifestName = s[0];
				this.m_resourceName = s[1];
				this.m_className = s[2];
			}
		},

//==========================================================================================
	methods: {
//==========================================================================================

//------------------------------------------------------------------------------------------
		setup: function () { // void
		},
		
//------------------------------------------------------------------------------------------
		cleanup: function () { // void
		},
	
//==========================================================================================
$: function () {} }, // end methods

//==========================================================================================
	accessors: {
//==========================================================================================

//------------------------------------------------------------------------------------------
		manifestName: {
			get: function () { // String
				return this.m_manifestName;
			},
		
			put: function (__value) { // void
				
			}
		},
	
//------------------------------------------------------------------------------------------
		resourceName: {
			get: function () {
				return this.m_resourceName;
			},
			
			set: function (__value) {
			}
		},

//------------------------------------------------------------------------------------------
		className: {
			get: function () {
				return this.m_className;
			},
			
			set: function (__value) {
			}
		},
		
//==========================================================================================
$: {} }, // end accessors

//==========================================================================================
statics: {
//==========================================================================================

//==========================================================================================
$: function () {} }, // end statics

//==========================================================================================
end: []
//==========================================================================================
	});
			
//==========================================================================================
}());