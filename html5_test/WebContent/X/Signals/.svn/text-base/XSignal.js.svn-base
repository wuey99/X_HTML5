//==========================================================================================
(function() { var c$ = {__initializing__: false};
//==========================================================================================
var n$ = g$.namespace ("X.Signals");
	
g$.import (
	function () {
		g$.import (c$, "X.Collections.*");
	}
);

//==========================================================================================
	g$.class (c$, n$, {

//==========================================================================================
	name: "XSignal", extend: Object, borrows: [],
//==========================================================================================
	
//==========================================================================================
	properties: {
//==========================================================================================
		m_listeners: null,			// XDict;
		m_parent: null,				// *;		
	
//==========================================================================================
$: function () {} }, // end properties

//==========================================================================================
	construct:
//==========================================================================================
		function () {
			if (c$.__initializing__) return;
		
//			Object.call (this);
		
			this.m_listeners = new c$.XDict ();
			this.m_parent = null;
		},

//==========================================================================================
	methods: {
//==========================================================================================

//------------------------------------------------------------------------------------------
		setup: function () { // void
		},
		
//------------------------------------------------------------------------------------------
		cleanup: function () { // void
		},
	
//------------------------------------------------------------------------------------------
		getParent: function () { // *
			return this.m_parent;
		},
		
//------------------------------------------------------------------------------------------
		setParent: function (__parent) { // void
			this.m_parent = __parent;
		},
	
//------------------------------------------------------------------------------------------
		addListener: function (__listener) { // void
			this.m_listeners.put (__listener, 0);
		},
	
//------------------------------------------------------------------------------------------
		fireSignal: function () { // void	
			switch (arguments.length) {
				case 0:
					this.m_listeners.forEach (
						function (__listener) {
							__listener ();
						}
					);
					
					break;
					
				case 1:
					this.m_listeners.forEach (
						function (__listener) {
							__listener (arguments[0]);
						}
					);
					
					break;
					
				default:
					this.m_listeners.forEach (
						function (__listener) {
							__listener (arguments);
						}
					);
					
					break;
			}
		},
		
//------------------------------------------------------------------------------------------
		removeListener: function (__listener) { // void
			if (this.m_listeners.exists (__listener)) {
				this.m_listeners.remove (__listener);
			}
		},

//------------------------------------------------------------------------------------------
		removeAllListeners: function () { //void
			this.m_listeners.forEach (
				function (__listener) {
					this.m_listeners.remove (__listener);
				}.bind (this)
			);
		},
		
//==========================================================================================
$: function () {} }, // end methods

//==========================================================================================
end: []
//==========================================================================================
	});
			
//==========================================================================================
}());