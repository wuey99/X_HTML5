//==========================================================================================
(function() { var c$ = {__initializing__: false};
//==========================================================================================
var n$ = g$.namespace ("X.World.Sprite");
	
g$.import (
		function () {
			g$.import (c$, "X.Geom.*");
			g$.import (c$, "X.World.Sprite.*");
		}
	);

//==========================================================================================
	g$.class (c$, n$, {

//==========================================================================================
	name: "XSprite", extend: c$.XSprite0, borrows: [c$.XRegistration_impl],
//==========================================================================================

//==========================================================================================
	properties: {
//==========================================================================================
		m_scale: 1,						// Number;
		m_visible: false,				// Boolean;
	
//==========================================================================================
$: function () {} }, // end properties

//==========================================================================================
	construct:
//==========================================================================================
		function () {
			if (c$.__initializing__) return;
		
			c$.XSprite0.call (this);
			
			this.setRegistration ();
			
			this.m_scale = 1.0;
			this.m_visible = true;
		},

//==========================================================================================
	methods: {
//==========================================================================================
		
//------------------------------------------------------------------------------------------
		setup: function () { // void
		},
		
//------------------------------------------------------------------------------------------
		cleanup: function () { // void
		},
		
//------------------------------------------------------------------------------------------
		// __p:XPoint
		globalToLocalXPoint: function (__p) { // XPoint
			var __x /* Point */ = this.globalToLocal (__p.getPoint ());
			
			return new c$.XPoint (__x.x, __x.y);
		},
		
//------------------------------------------------------------------------------------------
		// __canvasWidth:Number, __canvasHeight:Number
		viewPort: function (__canvasWidth, __canvasHeight) { // XRect
			return new c$.XRect (
				-this.x/this.m_scale,
				-this.y/this.m_scale,
				__canvasWidth/this.m_scale,
				__canvasHeight/this.m_scale
			);
		},
		
//------------------------------------------------------------------------------------------
		getPos: function () { // XPoint
			return new c$.XPoint (this.x2, this.y2);
		},

//------------------------------------------------------------------------------------------
		// __p:XPoint
		setPos: function (__p) { // void
			this.x2 = __p.x;
			this.y2 = __p.y;
		},

//------------------------------------------------------------------------------------------
		// __scale:Number
		setScale: function (__scale) { // void
			this.m_scale = __scale;
			
			this.scaleX2 = __scale;
			this.scaleY2 = __scale;
		},
		
//------------------------------------------------------------------------------------------
		getScale: function () { // Number
			return this.m_scale;
		},

//==========================================================================================
$: function () {} }, // end methods

//==========================================================================================
accessors: {
//==========================================================================================

//------------------------------------------------------------------------------------------
	visible2: {
		get: function () {
			return this.m_visible;
		},
			
		set: function (__value) {
			this.m_visible = __value;
		}
	},
		
//==========================================================================================
$: {} }, // end accessors

//==========================================================================================
statics: {
//==========================================================================================

//==========================================================================================
$: function () {} }, // end statics

//==========================================================================================
end: []
//==========================================================================================
	});
			
//==========================================================================================
}());