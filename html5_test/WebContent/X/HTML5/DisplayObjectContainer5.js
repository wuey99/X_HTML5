//==========================================================================================
(function() { var c$ = {__initializing__: false};
//==========================================================================================
var n$ = g$.namespace ("X.HTML5");
	
g$.import (
		function () {
			g$.import (c$, "X.HTML5.*");
		}
	);

//==========================================================================================
	g$.class (c$, n$, {

//==========================================================================================
	name: "DisplayObjectContainer5", extend: Object, borrows: [],
//==========================================================================================

//==========================================================================================
	properties: {
//==========================================================================================
		parent: null,				// Class;
		m_children: null,			// Array
		
//==========================================================================================
$: function () {} }, // end properties

//==========================================================================================
	construct:
//==========================================================================================
		function () {
			if (c$.__initializing__) return;
		
//			Object.call (this);		
	
			this.m_children = new Array ();
		},

//==========================================================================================
	methods: {
//==========================================================================================

//------------------------------------------------------------------------------------------
		setup: function () { // void
		},
		
//------------------------------------------------------------------------------------------
		cleanup: function () { // void
		},

//------------------------------------------------------------------------------------------
		addChild: function (__child) { // Sprite5
			if (__child.parent) {
				__child.parent.removeChild (__child);
			}
			
			__child.parent = this;
			
			this.m_children.push (__child);
			
			return __child;
		},
		
//------------------------------------------------------------------------------------------
		addChildAt: function (__child, __index) { // Sprite5
			if (__child.parent) {
				__child.parent.removeChild (__child);
			}
			
			__child.parent = this;
			
			this.m_children.splice (index, 0, __child);
			
			return __child;
		},

//------------------------------------------------------------------------------------------
		contains: function (__child) { // Boolean
			return false;
		},

//------------------------------------------------------------------------------------------
		getChildAt: function (__index) { // Sprite5
			if (__index >= 0 && __index < this.m_children.length) {
				return this.m_children[__index];
			}
			else
			{
				return null;
			}
		},
		
//------------------------------------------------------------------------------------------
		getChildIndex: function (__child) { // Number
			return this.m_children.indexOf (__child);
		},
		
//------------------------------------------------------------------------------------------
		removeChild: function (__child) { // Sprite5
			return this.removeChildAt (this.m_children.indexOf (__child));
		},
		
//------------------------------------------------------------------------------------------
		removeChildAt: function (__index) { // Sprite5
			if (__index < 0 || __index >= this.m_children.length) {
				return null;
			}
			else
			{
				var __child = this.m_children[index];
				
				__child.cleanup ();
				
				__child.parent = null;
				
				this.m_children.splice (__index, 1);
			}
		},
		
//------------------------------------------------------------------------------------------
		setChildIndex: function (__child, __dstIndex) { // void
			var __srcIndex = this.m_children.indexOf (__child);
			
			if (__srcIndex == -1) {
				return;
			}
			
			this.m_children.splice (__srcIndex, 1);
			
			if (__srcIndex < __dstIndex) {
				__dstIndex--;
			}
			
			this.m_children.splice (__dstIndex, 0, __child);
		},

//------------------------------------------------------------------------------------------
		
//==========================================================================================
$: function () {} }, // end methods

//==========================================================================================
accessors: {
//==========================================================================================
	
//------------------------------------------------------------------------------------------
		numChildren: {
			get: function () {
				return this.m_children.length;
			},
			
			set: function (__value) {
				throw (Error ("DisplayObjectContainer5: numChildren read-only"));
			}
		},
	
//------------------------------------------------------------------------------------------
		mouseChildren: {
			get: function () {
				return false;
			},
			
			set: function (__value) {
			}
		},

//------------------------------------------------------------------------------------------
		mouseEnabled: {
			get: function () {
				return false;
			},
			
			set: function (__value) {
			}
		},
		
//==========================================================================================
$: {} }, // end accessors

//==========================================================================================
statics: {
//==========================================================================================

//==========================================================================================
$: function () {} }, // end statics

//==========================================================================================
end: []
//==========================================================================================
	});
			
//==========================================================================================
}());